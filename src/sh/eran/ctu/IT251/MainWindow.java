package sh.eran.ctu.IT251;

import java.awt.Color;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;
import javax.swing.Timer;

/**
 *
 * @author Eran
 * 
 * Oh my, this class is kind of a mess... I'm not used to the application auto-
 * generating so much. I'll try my best to keep things tidy however I'm sure
 * I'm breaking all kinds of convention here. Sorry!
 * 
 */
public class MainWindow extends javax.swing.JFrame {
    
    // Accounts array, to be used later.
    Account accounts[] = new Account[3];
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        debugWindow = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        debugTextArea = new javax.swing.JTextArea();
        paperToggle = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        suppliesToggle = new javax.swing.JToggleButton();
        jLabel3 = new javax.swing.JLabel();
        servicesToggle = new javax.swing.JToggleButton();
        paperSalesLabel = new javax.swing.JLabel();
        paperAddSale = new javax.swing.JButton();
        suppliesAddSale = new javax.swing.JButton();
        servicesAddSale = new javax.swing.JButton();
        ST_Logo = new javax.swing.JLabel();
        paperNumSales = new javax.swing.JLabel();
        paperSalesLabel1 = new javax.swing.JLabel();
        suppliesNumSales = new javax.swing.JLabel();
        servicesNumSales = new javax.swing.JLabel();
        paperTotalSales = new javax.swing.JLabel();
        suppliesTotalSales = new javax.swing.JLabel();
        servicesTotalSales = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        totalNumSales = new javax.swing.JLabel();
        paperSalesLabel2 = new javax.swing.JLabel();
        totalTotalSales = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        resetSession = new javax.swing.JMenuItem();
        exitApplication = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        showDebug = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        debugWindow.setTitle("Debug Output");
        debugWindow.setMinimumSize(new java.awt.Dimension(500, 400));

        debugTextArea.setColumns(20);
        debugTextArea.setRows(5);
        jScrollPane1.setViewportView(debugTextArea);

        javax.swing.GroupLayout debugWindowLayout = new javax.swing.GroupLayout(debugWindow.getContentPane());
        debugWindow.getContentPane().setLayout(debugWindowLayout);
        debugWindowLayout.setHorizontalGroup(
            debugWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(debugWindowLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        debugWindowLayout.setVerticalGroup(
            debugWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(debugWindowLayout.createSequentialGroup()
                .addGap(0, 17, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 18, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sales Tracker 98");
        setMinimumSize(new java.awt.Dimension(450, 350));
        setPreferredSize(new java.awt.Dimension(422, 300));
        setResizable(false);

        paperToggle.setForeground(java.awt.Color.darkGray);
        paperToggle.setText("Enable");
        paperToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paperToggleActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Paper");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Supplies");

        suppliesToggle.setForeground(java.awt.Color.darkGray);
        suppliesToggle.setText("Enable");
        suppliesToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppliesToggleActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Services");

        servicesToggle.setForeground(java.awt.Color.darkGray);
        servicesToggle.setText("Enable");
        servicesToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicesToggleActionPerformed(evt);
            }
        });

        paperSalesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        paperSalesLabel.setText("Num. of Sales");

        paperAddSale.setText("Add Sale");
        paperAddSale.setEnabled(false);
        paperAddSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paperAddSaleActionPerformed(evt);
            }
        });

        suppliesAddSale.setText("Add Sale");
        suppliesAddSale.setEnabled(false);
        suppliesAddSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppliesAddSaleActionPerformed(evt);
            }
        });

        servicesAddSale.setText("Add Sale");
        servicesAddSale.setEnabled(false);
        servicesAddSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicesAddSaleActionPerformed(evt);
            }
        });

        ST_Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sh/eran/ctu/IT251/assets/logo-small.png"))); // NOI18N

        paperNumSales.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        paperNumSales.setText("0");
        paperNumSales.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        paperSalesLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        paperSalesLabel1.setText("Total Sales");

        suppliesNumSales.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        suppliesNumSales.setText("0");
        suppliesNumSales.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        servicesNumSales.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        servicesNumSales.setText("0");
        servicesNumSales.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        paperTotalSales.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        paperTotalSales.setText("0");
        paperTotalSales.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        suppliesTotalSales.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        suppliesTotalSales.setText("0");
        suppliesTotalSales.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        servicesTotalSales.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        servicesTotalSales.setText("0");
        servicesTotalSales.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        totalNumSales.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        totalNumSales.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalNumSales.setText("0");
        totalNumSales.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        paperSalesLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        paperSalesLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        paperSalesLabel2.setText("Grand Totals");

        totalTotalSales.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        totalTotalSales.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalTotalSales.setText("0");
        totalTotalSales.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jMenu1.setText("File");

        resetSession.setText("Reset");
        resetSession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetSessionActionPerformed(evt);
            }
        });
        jMenu1.add(resetSession);

        exitApplication.setText("Exit");
        exitApplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitApplicationActionPerformed(evt);
            }
        });
        jMenu1.add(exitApplication);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("About");

        showDebug.setText("Debug");
        showDebug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDebugActionPerformed(evt);
            }
        });
        jMenu2.add(showDebug);

        jMenuItem1.setText("About SalesTracker98");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(180, 180, 180)
                            .addComponent(paperSalesLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(totalNumSales, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(totalTotalSales, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jSeparator2)
                                .addComponent(jSeparator1)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(servicesToggle)
                                        .addComponent(suppliesToggle)
                                        .addComponent(paperToggle))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(servicesAddSale)
                                        .addComponent(paperAddSale)
                                        .addComponent(suppliesAddSale))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(paperSalesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(paperNumSales, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(suppliesNumSales, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(servicesNumSales, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(paperSalesLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(paperTotalSales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(suppliesTotalSales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(servicesTotalSales, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)))
                                .addComponent(ST_Logo)))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(ST_Logo)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(paperSalesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                    .addComponent(paperSalesLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(paperTotalSales))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(paperToggle)
                            .addComponent(jLabel1)
                            .addComponent(paperAddSale)
                            .addComponent(paperNumSales))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(suppliesToggle)
                    .addComponent(jLabel2)
                    .addComponent(suppliesAddSale)
                    .addComponent(suppliesNumSales)
                    .addComponent(suppliesTotalSales))
                .addGap(10, 10, 10)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(servicesToggle)
                    .addComponent(jLabel3)
                    .addComponent(servicesAddSale)
                    .addComponent(servicesNumSales)
                    .addComponent(servicesTotalSales))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paperSalesLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                    .addComponent(totalNumSales)
                    .addComponent(totalTotalSales))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
     * =========================== Toggle Buttons =============================
     */    
    
    /*
     * clicking either of these buttons will evaluate if the button was already
     * clicked, if is hasn't then it's appearance is toggled, the associated 
     * object is instantiatied, and the add sale button is enabled. If it has,
     * then the user is prompted and the account is nullified.
     * 
     * There's a bug here that needs to be handled, if the user attempts to 
     * disable the account but cancels it during the IO.confirmDelete prompt then
     * the buttons still get toggles while the account is left alone. The buttons
     * are then out of sync.
     */
    
    private void paperToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paperToggleActionPerformed

       if(toggleThisButton(paperToggle, paperAddSale)){
           accounts[0] = Paper.createAccount();
           JOptionPane.showMessageDialog(this, "Paper Account Enabled!");
       }else if(IO.confirmDelete("This will erase all recorded sales for this account. Are you sure you want to do this?")){
            accounts[0] = null;
       }
       updateTotals(); 
    }//GEN-LAST:event_paperToggleActionPerformed

    private void suppliesToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppliesToggleActionPerformed

       if(toggleThisButton(suppliesToggle, suppliesAddSale)){
           accounts[1] = new Supplies();
           JOptionPane.showMessageDialog(this, "Supplies Account Enabled!");
       }else if(IO.confirmDelete("This will erase all recorded sales for this account. Are you sure you want to do this?")){
           accounts[1] = null;
       } 
       updateTotals();
    }//GEN-LAST:event_suppliesToggleActionPerformed

    private void servicesToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicesToggleActionPerformed

       if(toggleThisButton(servicesToggle, servicesAddSale)){
           accounts[2] =  Services.createAccount();
           JOptionPane.showMessageDialog(this, "Services Account Enabled!");
       }else if(IO.confirmDelete("This will erase all recorded sales for this account. Are you sure you want to do this?")){
           accounts[2] = null;          
       }         
        updateTotals();
    }//GEN-LAST:event_servicesToggleActionPerformed

    
    /*
     * =========================== Reset Session =============================
     */ 
    
    private void resetSessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetSessionActionPerformed
        
        paperToggle.setSelected(false);
        paperToggle.setText("Enable");
        paperAddSale.setEnabled(false);
        accounts[0] = null;
        
        suppliesToggle.setSelected(false);
        suppliesToggle.setText("Enable");
        suppliesAddSale.setEnabled(false);
        accounts[1] = null;
        
        servicesToggle.setSelected(false);
        servicesToggle.setText("Enable");
        servicesAddSale.setEnabled(false);
        accounts[2] = null;
        
        updateTotals();
        
    }//GEN-LAST:event_resetSessionActionPerformed

    /*
     * ========================= Toolbar exit button ===========================
     */     
    
    private void exitApplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitApplicationActionPerformed
        if(IO.confirmDelete("Exiting will erase all sales recorded during this session.\n Are you sure you want to do this?")){
            System.exit(0);
        }   
    }//GEN-LAST:event_exitApplicationActionPerformed

    /*
     * =========================== Add paper sale ==============================
     */    
    
    private void paperAddSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paperAddSaleActionPerformed
        accounts[0].addSale();
        updateTotals();
    }//GEN-LAST:event_paperAddSaleActionPerformed

    /*
     * ========================= Debug window stuff ============================
     */     
    
    /*
     * I couldn't help but add this, the debug window will show the current state
     * of all three account objects. It should update whenever anything changes.
     */
    
    private void showDebugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDebugActionPerformed
        
        updateDebugWindow();
        debugWindow.setVisible(true);
    }//GEN-LAST:event_showDebugActionPerformed

    private void updateDebugWindow(){
        
        debugTextArea.setText(null);
        
        try{
            debugTextArea.append( accounts[0].toString() );
        }catch(Exception ex){
            debugTextArea.append("Failed to generate debug output for paper account.\nMaybe an account hasn't been created yet?\n");
        }
        
        try{
            debugTextArea.append( accounts[1].toString() );
        }catch(Exception ex){
            debugTextArea.append("Failed to generate debug output for supplies account.\nMaybe an account hasn't been created yet?\n");            
        }
        
        try{
            debugTextArea.append( accounts[2].toString() );
        }catch(Exception ex){
            debugTextArea.append("Failed to generate debug output for services account.\nMaybe an account hasn't been created yet?\n");            
        }
    }
    
    private void suppliesAddSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppliesAddSaleActionPerformed
        accounts[1].addSale();
        updateTotals();
    }//GEN-LAST:event_suppliesAddSaleActionPerformed

    /*
     * ========================== Add services sale =============================
     */  
    
    private void servicesAddSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicesAddSaleActionPerformed
        accounts[2].addSale();
        updateTotals();
    }//GEN-LAST:event_servicesAddSaleActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        Splash splash = new Splash();
        splash.init( splash, getTotalSales() );
              
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ST_Logo;
    private javax.swing.JTextArea debugTextArea;
    private javax.swing.JDialog debugWindow;
    private javax.swing.JMenuItem exitApplication;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton paperAddSale;
    private javax.swing.JLabel paperNumSales;
    private javax.swing.JLabel paperSalesLabel;
    private javax.swing.JLabel paperSalesLabel1;
    private javax.swing.JLabel paperSalesLabel2;
    private javax.swing.JToggleButton paperToggle;
    private javax.swing.JLabel paperTotalSales;
    private javax.swing.JMenuItem resetSession;
    private javax.swing.JButton servicesAddSale;
    private javax.swing.JLabel servicesNumSales;
    private javax.swing.JToggleButton servicesToggle;
    private javax.swing.JLabel servicesTotalSales;
    private javax.swing.JMenuItem showDebug;
    private javax.swing.JButton suppliesAddSale;
    private javax.swing.JLabel suppliesNumSales;
    private javax.swing.JToggleButton suppliesToggle;
    private javax.swing.JLabel suppliesTotalSales;
    private javax.swing.JLabel totalNumSales;
    private javax.swing.JLabel totalTotalSales;
    // End of variables declaration//GEN-END:variables

     /*
     * ========================== Button Toggler  ==============================
     */   
    
    /*
     * This is poor coding at its finest and I should feel bad.
     */
    
    private boolean toggleThisButton(JToggleButton toggleButton, JButton saleButton) {
        
        if( toggleButton.isSelected() ){
            toggleButton.setForeground(Color.black);
            toggleButton.setText("Disable");
            saleButton.setEnabled(true);
            return true;
        }else{
            toggleButton.setForeground(Color.darkGray);
            toggleButton.setText("Enable");
            saleButton.setEnabled(false);            
            return false;
        }
            
    }
    

    /*
     * =========================== Update Totals ==============================
     */  
    
    /*
     * What fun is data entry if there isn't something updating in real time?
     */
    
    private void updateTotals(){
        
        paperNumSales.setText( "0" );
        paperTotalSales.setText( "0" );
        suppliesNumSales.setText( "0" );
        suppliesTotalSales.setText( "0" );
        servicesNumSales.setText( "0" );
        servicesTotalSales.setText( "0" );
        totalNumSales.setText( "0" );
        totalTotalSales.setText( "0" );
        
        try{
            paperNumSales.setText( String.valueOf( accounts[0].getNumOfSales() ) );
            paperTotalSales.setText( String.valueOf( accounts[0].computeSales() ) );
        }catch(Exception ex){
            System.out.println("Paper account update failed.");
        }
        
        try{
            suppliesNumSales.setText( String.valueOf( accounts[1].getNumOfSales() ) );
            suppliesTotalSales.setText( String.valueOf( accounts[1].computeSales() ) );
        }catch(Exception ex){
            System.out.println("Supplies account update failed.");
        }
        
        try{
            servicesNumSales.setText( String.valueOf( accounts[2].getNumOfSales() ) );
            servicesTotalSales.setText( String.valueOf( accounts[2].computeSales() ) );
        }catch(Exception ex){
            System.out.println("Services account update failed.");
        }
        
        try{
            
            int totalNum = 0;
            double totalSales = 0;
            
            for( Account a: accounts ){
                
                try{
                    totalNum += a.getNumOfSales();
                    totalSales += a.computeSales();                   
                }catch(Exception ex){
                    System.out.println("Skipping account...");
                }

            }
            
            totalNumSales.setText( String.valueOf( totalNum ) );
            totalTotalSales.setText( String.valueOf( totalSales ) );
            
        }catch(Exception ex){
            System.out.println("Aggregate update failed.");
        }
        
        if(debugWindow.isVisible()) updateDebugWindow();
        
    }
    
    public double getTotalSales(){
        
        double totalSales = 0;
        
        try{
            for( Account a: accounts ){
                
                try{
                    totalSales += a.computeSales();                   
                }catch(Exception ex){
                    System.out.println("Skipping account...");
                }
            }
        }catch(Exception ex){
            System.out.println("Aggregate update failed.");
        }
        
        return totalSales;
            
        
    }

}
